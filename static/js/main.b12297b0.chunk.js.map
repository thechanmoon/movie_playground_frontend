{"version":3,"sources":["constants/index.js","components/NavBar.js","components/ListingCard.js","components/LoadingSpinner.js","components/ListingsContainer.js","components/JournalForm.js","components/Journal.js","components/Review.js","components/ListingPage.js","components/LoginForm.js","components/SignupForm.js","components/JournalItem.js","components/JournalList.js","components/ActorDetail.js","components/App.js","store/reducer.js","index.js"],"names":["API_URL","IMAGE_URL","NavBar","state","searchTerm","indexTerm","handleLogout","fetch","method","credentials","then","r","json","props","handleUpdateCurrentUser","handleChange","event","setState","target","value","handleSubmit","preventDefault","handleUpdateSearch","handleIndexSelectChange","console","log","to","className","name","onChange","this","onSubmit","type","placeholder","currentUser","onClick","username","React","Component","ListingCard","favorite","toggleFavorite","prevState","sliceTitle","string","length","slice","listing","table","id","poster_path","title","image","showDetail","style","backgroundImage","LoadingSpinner","ListingsContainer","fourStarOnly","startIndex","listings","showMap","loaded","toggleShowMap","handleFourStarFilter","handleUpdateIndex","handleUpdateListing","updatedListing","updatedListings","map","history","push","fetchListings","prevProps","fetchSearchListings","url","listingsToDisplay","filter","rating","key","listingCards","getListingCards","initialState","text","watch_date","JournalForm","handleInputChange","inputName","fetchCreateMovie","currentMovie","data","overview","tmdb_id","headers","body","JSON","stringify","fetchCreateJournal","fetchMovie","date","Journal","Review","author","href","class","ListingPage","reviews","video_url","match","params","movie","videos","fetchSearchReviews","movie_id","release_date","runtime","vote_average","revenue","genres","casts","journals","cast","index","toLocaleString","controls","journal","listingId","results","review","LoginForm","password","ok","user","catch","error","SignUpForm","password_confirmation","alert","JournalItem","JournalList","movies","useSelector","dispatch","useDispatch","useEffect","payload","ActorDetail","flexGrow","flexBasis","App","document","mode","exact","path","render","routeProps","SignupForm","compose","withRouter","connect","counter","paused","likedNumbers","someFunc","defaultState","comment","comments","somethingElse","store","createStore","action","composeWithDevTools","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b12297b0.chunk.js","sourcesContent":["//export const API_URL = \"http://localhost:3000\"\nexport const API_URL = \"https://moviepg-api.herokuapp.com/\"\n// export const IMAGE_URL = \"https://image.tmdb.org/t/p/w300\"\nexport const IMAGE_URL = \"https://image.tmdb.org/t/p/w300_and_h450_bestv2\"\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { API_URL } from '../constants'\n\nclass NavBar extends React.Component {\n  state = {\n    searchTerm: \"\",\n    indexTerm: \"popular\"\n  }\n\n  handleLogout = () => {\n    fetch(API_URL + \"/logout\", {\n      method: \"POST\",\n      credentials: \"include\"\n    })\n      .then(r => r.json())\n      .then(() => {\n        this.props.handleUpdateCurrentUser(null)\n      })\n  }\n\n  handleChange = event => {\n    this.setState({ searchTerm: event.target.value })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.handleUpdateSearch(this.state.searchTerm)\n    this.setState({searchTerm:''})\n    // debugger\n  }\n\n  handleIndexSelectChange = event =>{\n    console.log(event.target.value);\n    this.setState({ indexTerm: event.target.value })\n    this.props.handleIndexSelectChange(event.target.value);\n  }\n\n  render() {\n    return (\n      <header>\n        <Link to=\"/listings\">\n          <div className=\"logo\" />\n        </Link>\n\n        <div className=\"logo-playground\" />\n        \n        <Link to=\"/Journals\">\n          <button>Journals</button>\n        </Link>\n\n        <select name = 'indexSelect' onChange = {this.handleIndexSelectChange}>\n          <option value=\"popular\">popular</option>\n          <option value=\"upcoming\">upcoming</option>\n          <option value=\"now_playing\">now_playing</option>\n          <option value=\"top_rated\">top_rated</option>\n        </select>\n\n        <form className=\"search\" onSubmit={this.handleSubmit}>\n          <input type=\"text\" name = 'searchInput' placeholder=\"Search movies...\" value={this.state.searchTerm} onChange={this.handleChange} />\n          {/* <input type=\"submit\" value=\"Search\" /> */}\n          {/* <button style = {{margin:\"20px\"}} className = \"btn btn-primary\">Search</button> */}\n          <button className = \"btn btn-primary\">Search</button>\n        </form>\n        <div className=\"actions\">\n          {this.props.currentUser ? (\n            <button onClick={this.handleLogout}>Logout {this.props.currentUser.username}</button>\n          ) : (\n              <>\n                <Link to=\"/login\">\n                  <button>Login</button>\n                </Link>\n                <Link to=\"/signup\">\n                  <button>Sign Up</button>\n                </Link>\n              </>\n            )}\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default NavBar","import React from 'react'\nimport { IMAGE_URL } from '../constants'\nclass ListingCard extends React.Component {\n\n  state = {\n    favorite: true\n  }\n\n\n\n\n  toggleFavorite = () => {\n    // arrow fn\n    // const implicit = () => ({ key: \"value\" })\n    // const explicit = () => {\n    //   return { key: \"value\" }\n    // }\n\n    // this is best practice if your next state depends on prev state\n    this.setState(prevState => ({\n      favorite: !prevState.favorite\n    }))\n\n    // this will generally work\n    // this.setState({ favorite: !this.state.favorite })\n  }\n\n  sliceTitle = (string) =>\n  {\n    return (string.length <19 ? string : `${string.slice(0,18)}...`)\n  }\n\n\n  render() {\n    // destructuring the props object (we could also do the destructuring directly to the argument of the ListingCard fn)\n    // const { image, name, city, rating, price } = this.props\n    const { id, poster_path, title } = this.props.listing.table\n    // poster_path = \"https://image.tmdb.org/t/p/w300\"+poster_path;\n    let image = IMAGE_URL + poster_path;\n    // console.log(this.props.listing.poster_path);\n    return (\n      <div className=\"card\" onClick={() => this.props.showDetail(id)}>\n        <div className=\"image\" style={{ backgroundImage: `url(${image})` }}>\n          {/* <button onClick={this.toggleFavorite} className=\"favorite\">\n            <span role=\"img\" aria-label=\"heart\">{this.state.favorite ? \"♥️\" : \"♡\"}</span>\n          </button> */}\n        </div>\n        {/* <div className=\"info\">\n          <span>{city}</span>\n          <span>★ {rating}</span>\n        </div> */}\n        <div  className=\"info\">\n        <h4 className=\"title\">{this.sliceTitle(title)}</h4>\n        </div>\n        {/* <div className=\"price\">\n          <strong>${price}</strong>/month\n        </div> */}\n      </div>\n\n      // <div className=\"card\">\n      //   <div className=\"image\" style={{ backgroundImage: `url(${image})` }}>\n      //     <button onClick={this.toggleFavorite} className=\"favorite\">\n      //       <span role=\"img\" aria-label=\"heart\">{this.state.favorite ? \"♥️\" : \"♡\"}</span>\n      //     </button>\n      //   </div>\n      //   <div className=\"info\">\n      //     <span>{city}</span>\n      //     <span>★ {rating}</span>\n      //   </div>\n      //   <h4 className=\"title\">{name}</h4>\n      //   <div className=\"price\">\n      //     <strong>${price}</strong>/month\n      //   </div>\n      // </div>\n    )\n  }\n}\n\nexport default ListingCard","import React from 'react'\n\nconst LoadingSpinner = () => (\n  <div className=\"spinner-container\">\n    <div className=\"spinner\" />\n  </div>\n)\n\nexport default LoadingSpinner","import React from 'react'\nimport ListingCard from './ListingCard'\n// import ListingMap from './ListingMap'\n// import FilterBar from './FilterBar'\n// import Pager from './Pager'\nimport LoadingSpinner from './LoadingSpinner'\n\nimport { API_URL } from '../constants'\n\nclass ListingsContainer extends React.Component {\n\n  // initial state\n  state = {\n    fourStarOnly: false,\n    startIndex: 0,\n    listings: [],\n    showMap: true,\n    loaded: false,\n    searchTerm: '',\n    indexTerm: ''\n  }\n\n  componentDidMount() {\n    this.fetchListings()\n  }\n\n  componentDidUpdate(prevProps) {\n      // this.setState({ loaded: false })\n      // this.fetchListings()\n      console.log(prevProps);\n      console.log(this.props);\n      console.log(prevProps.searchTerm);\n      console.log(this.props.searchTerm);\n      if(prevProps.searchTerm !== this.props.searchTerm)\n      {\n        this.setState({searchTerm: this.props.searchTerm})\n        this.fetchSearchListings(this.props.searchTerm)\n        this.setState({searchTerm: '????'})\n      }else if(prevProps.indexTerm !== this.props.indexTerm){\n        this.setState({ indexTerm: this.props.indexTerm})\n        this.fetchListings(this.props.indexTerm)\n      }\n  }\n\n  fetchListings(indexTerm = '') {\n\n    console.log(this.props)\n    console.log('indexTerm : ', indexTerm)\n    // console.log('searchTermv: ', searchTerm)\n    // let url = API_URL + `/apis?query=${indexTerm}`;\n    let url = API_URL + `/lists?query=${indexTerm}`;\n    // if(searchTerm!='')\n    // {\n    //   url = API_URL + `/search?query='${searchTerm}'`\n    // }\n\n    console.log(url)\n    // const city = this.props.match.params.city || \"\"\n    fetch(url, {\n      credentials: \"include\"\n    })\n      .then(r => r.json())\n      .then(listings => {\n        console.log(listings)\n        this.setState({\n          listings: listings,\n          startIndex: 0,\n          loaded: true,\n        })\n      })\n  }\n\n  fetchSearchListings(searchTerm='') {\n\n    console.log(this.props)\n    // console.log('indexTerm : ', indexTerm)\n    console.log('searchTermv: ', searchTerm)\n    // let url = API_URL + `/movies?query=${indexTerm}`;\n\n    // if(searchTerm!='')\n    // {\n    let url = API_URL + `/search?query='${searchTerm}'`\n    // }\n\n    console.log(url)\n    // const city = this.props.match.params.city || \"\"\n    fetch(url, {\n      credentials: \"include\"\n    })\n      .then(r => r.json())\n      .then(listings => {\n        console.log(listings)\n        this.setState({\n          listings: listings,\n          startIndex: 0,\n          loaded: true,\n          searchTerm: ''\n        })\n      })\n  }\n\n  // Event handlers\n  toggleShowMap = () => {\n    this.setState(prevState => ({\n      showMap: !prevState.showMap\n    }))\n  }\n\n  handleFourStarFilter = () => {\n    this.setState(prevState => ({\n      fourStarOnly: !prevState.fourStarOnly,\n      startIndex: 0\n    }))\n  }\n\n  handleUpdateIndex = startIndex => {\n    this.setState({ startIndex: startIndex })\n  }\n\n  handleUpdateListing = updatedListing => {\n    const updatedListings = this.state.listings.map(listing => {\n      if (updatedListing.id === listing.id) {\n        return updatedListing\n      } else {\n        return listing\n      }\n    })\n\n    this.setState({\n      listings: updatedListings\n    })\n  }\n\n  showDetail = id => {\n    console.log('showDetail id = ' , id)\n    this.props.history.push(`/listings/${id}`)\n  }\n\n  getFilteredListings() {\n    let listingsToDisplay = this.state.listings\n    // filter based on fourStarRating filter (from state)\n    if (this.state.fourStarOnly) {\n      listingsToDisplay = listingsToDisplay.filter(listing => listing.rating >= 4)\n    }\n    return listingsToDisplay\n  }\n\n  getPagedListings(listings) {\n    // return listings.slice(this.state.startIndex, this.state.startIndex + 15)\n  }\n\n  getSearchedListing()\n  {\n\n  }\n\n  getListingCards(listings) {\n    console.log(listings)\n    return listings\n      .map(listing => <ListingCard key={listing.table.id} listing={listing} showDetail={this.showDetail} handleUpdateListing={this.handleUpdateListing}/>)\n  }\n\n  // getListingCards(listings) {\n  //   return listings\n  //     .map(listing => <ListingCard key={listing.id} listing={listing} showDetail={this.showDetail} handleUpdateListing={this.handleUpdateListing} />)\n  // }\n\n  render() {\n    if (!this.state.loaded) {\n      return <LoadingSpinner />\n    }\n\n    // const filteredListings = this.getFilteredListings()\n    // const pagedListings = this.getPagedListings(filteredListings)\n    const listingCards = this.getListingCards(this.state.listings)\n\n    return (\n      <>\n        {/* Movie */}\n        {/* <FilterBar\n          handleFourStarFilter={this.handleFourStarFilter}\n          showMap={this.state.showMap}\n          toggleShowMap={this.toggleShowMap}\n        />\n        {this.state.showMap ? (\n          <section className=\"map-listings\">\n            <div className=\"details\">\n              {listingCards}\n            </div>\n            <ListingMap listings={pagedListings} showDetail={this.showDetail} handleUpdateListing={this.handleUpdateListing} />\n          </section>\n        ) : (\n            <section className=\"listings\">\n              {listingCards}\n            </section>\n          )}\n\n        <Pager\n          startIndex={this.state.startIndex}\n          total={filteredListings.length}\n          handleUpdateIndex={this.handleUpdateIndex}\n        /> */}\n            <section className=\"listings\">\n              {listingCards}\n            </section>\n      </>\n    )\n  }\n}\n\nexport default ListingsContainer","import React from 'react'\nimport { API_URL } from '../constants'\n\nconst initialState = {\n  text: \"\",\n  rating: 1,\n  watch_date: \"\"\n}\n\nclass JournalForm extends React.Component {\n  state = initialState\n\n  componentDidMount()\n  {\n    this.setState({currentMovie: this.props.currentMovie})\n  }\n\n  handleInputChange = event => {\n    const inputName = event.target.name\n    this.setState({\n      [inputName]: event.target.value\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.fetchCreateMovie();\n\n  }\n\n  fetchCreateMovie()\n  {\n\n    console.log(this.state.currentMovie)\n\n    // debugger\n\n    const data = {\n      title: this.state.currentMovie.title,\n      poster_path: this.state.currentMovie.poster_path,\n      overview: this.state.currentMovie.overview,\n      tmdb_id: this.state.currentMovie.id,\n      // comment: this.state.comment,\n      // rating: this.state.rating\n    }\n\n\n\n    fetch(API_URL + `/movies`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\",\n    body: JSON.stringify(data)\n  })\n    .then(r => r.json())\n    .then(updatedListing => {\n      // this.props.handleUpdateListing(updatedListing)\n      // this.setState(initialState)\n      console.log(updatedListing);\n      console.log(updatedListing.id);\n      this.fetchCreateJournal(updatedListing.id)\n    })\n  }\n\n  fetchCreateJournal(id)\n  {\n   fetch(API_URL + `/movies/${id}/journals`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(this.state)\n    })\n      .then(r => r.json())\n      .then(updatedListing => {\n        // this.props.handleUpdateListing(updatedListing)\n        this.setState(initialState)\n        this.props.fetchMovie()\n      })\n  }\n\n \n\n  render() {\n    // const { text, rating, date } = this.state\n    const { text, date } = this.state\n    return (\n      <div className=\"form-container-wide\">\n        <h4>Write a Journal</h4>\n        <form onSubmit={this.handleSubmit}>\n          {/* <label>Comment:</label> */}\n          <textarea name=\"text\" onChange={this.handleInputChange} value={text} />\n          <input type=\"date\"  name = \"watch_date\" onChange={ this.handleInputChange } value={date} />\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default JournalForm","import React from 'react'\n\nconst Journal = ({ username, watch_date, text }) => {\n  return (\n    <div>\n      <div className=\"journal\">\n        <section>\n        <h5>{watch_date.slice(0,10)}</h5>\n        {/* <span className=\"date\" class=\"active\">{watch_date}</span> */}\n        <p className=\"comment\">{text}</p>\n        <p>{\"\\n\"}</p>\n        </section>\n      </div>\n    <div>\n      <button> Edit</button>\n      <button> Delete</button>\n    </div>\n    </div>\n  )\n}\n\nexport default Journal","import React from 'react'\n\n// const Review = ({ username, created_at, comment }) => {\n\n//   console.log(comment)\n//   return (\n//     <div className=\"review\">\n//       <h5>{username}</h5>\n//       <span className=\"date\">{created_at}</span>\n//       <p className=\"comment\">{comment}</p>\n//     </div>\n//   )\n// }\n\nconst Review = (props) => {\n\n  console.log(props)\n  return (\n    <div className=\"review\">\n      <h5>{props.table.author}</h5>\n      {/* <span className=\"date\">{props.table.url}</span> */}\n      <span className=\"comment\"><a href={props.table.url}class=\"active\">{props.table.url}</a></span>\n      {/* <p className=\"comment\">{props.table.content}</p> */}\n    </div>\n  )\n}\n\nexport default Review","import React from 'react'\nimport LoadingSpinner from './LoadingSpinner'\nimport JournalForm from './JournalForm'\nimport Journal from './Journal'\n// import ReviewForm from './ReviewForm'\nimport Review from './Review'\nimport { API_URL, IMAGE_URL } from '../constants'\nimport ReactPlayer from 'react-player';\n\nclass ListingPage extends React.Component {\n\n  state = {\n    listing: null,\n    loaded: false,\n    reviews: [],\n    video_url: '',\n    currentMovie: {}\n  }\n\n  componentDidMount() {\n   this.fetchMovie()\n  }\n\n  fetchMovie = () =>\n  {\n    console.log('ListingPage componentDidMount');\n    fetch(API_URL + `/apis/${this.props.match.params.id}`, {\n    // fetch(API_URL + `/apis/${tmdb_id}`, {\n      credentials: \"include\"\n    })\n      .then(r => r.json())\n      .then(listing => {\n        console.log(listing)\n\n\n        // this.setState({video_url: 'https://www.youtube.com/watch?v=1FgHYjtymQY' }) \n        //this.setState({video_url: 'https://www.youtube.com/watch?v=Z6Lt8umAStg'})\n        // this.setState({video_url: 'https://www.youtube.com/watch?v=4RI0QvaGoiI&list=PL20cj4jGpvsBAEnT7BfBwZmLwEzlwZTYa&index=2' }) // notting hill\n        // https://www.youtube.com/watch?v=0diCvgWv_ng // once upon a time in america\n        // https://www.youtube.com/watch?v=1FgHYjtymQY // // once upon a time in america full movie\n        // https://www.youtube.com/watch?v=Z6Lt8umAStg// conspiracy\n\n        // console.log(listing.reviews)\n\n        // listing.reviews = {...listing.reviews, ...listing.extra}\n\n        // for(let i = 0; listing.reviews &&  i < listing.reviews.length; i++)\n        // {\n        //   // let newObj =  {...listing.reviews[i], ...listing.extra[i]}\n        //   // console.log(newObj)\n        //   // listing.reviews[i] = newObj;\n        //   listing.reviews[i] = {...listing.reviews[i], ...listing.extra[i]}\n        // }\n\n\n        console.log(listing.reviews)\n\n        this.setState({\n          listing: listing,\n          loaded: true,\n          video_url: listing.movie.table.videos && listing.movie.table.videos.length>0?'https://www.youtube.com/watch?v='+listing.movie.table.videos[0] : '',\n          reviews: listing.reviews,\n          currentMovie: listing.movie.table\n        })\n        console.log(listing);    \n        console.log(listing.id);       \n        // this.fetchSearchReviews(listing.id);        \n      })\n  }\n\n  fetchSearchReviews = movie_id =>\n  {\n    console.log(movie_id);\n    let url = API_URL + `/movies/${movie_id}/reviews/search`\n    console.log(url)\n    fetch(url, {\n      credentials: \"include\"\n    })\n      .then(r => r.json())\n      .then(reviews => {\n        console.log(reviews)\n        this.setState({\n          reviews: reviews,\n          loaded: true\n        })\n      })\n  }\n\n  handleUpdateListing = listing => {\n    this.setState({ listing })\n  }\n\n  toggleFavorite = () => {\n\n    if (!this.state.listing.favorite) {\n      fetch(API_URL + `/listings/${this.state.listing.id}/favorites`, {\n        method: \"POST\",\n        credentials: \"include\"\n      })\n        .then(r => r.json())\n        .then(listing => this.setState({ listing }))\n    } else {\n      fetch(API_URL + `/listings/${this.state.listing.id}/favorites/remove`, {\n        method: \"DELETE\",\n        credentials: \"include\"\n      })\n        .then(r => r.json())\n        .then(listing => this.setState({ listing }))\n    }\n  }\n\n\n  render() {\n    console.log(this.props)\n    console.log(this.state)\n    if (!this.state.loaded) {\n      return <LoadingSpinner />\n    }\n\n    const { id, poster_path, title, overview, release_date, runtime, vote_average, revenue, genres, casts} = this.state.listing.movie.table;\n    const reviews = this.state.listing.reviews\n    const journals = this.state.listing.journals\n    console.log(this.state.listing)\n    console.log(this.state.listing.reviews)\n    console.log(reviews)\n    let image = IMAGE_URL + poster_path;\n    // console.log(video_url)\n    return (\n      <div className=\"detail\">\n        <div className='container'>\n          <div className=\"detail-info\">\n            <div className=\"image\" style={{ backgroundImage: `url(${image})` }}>\n              {/* <button onClick={this.toggleFavorite} className=\"favorite\">\n                <span role=\"img\" aria-label=\"heart\">{favorite ? \"♥️\" : \"♡\"}</span>\n              </button> */}\n            </div>\n            <div>\n            <h2> Genre: </h2>\n              <ul className=\"casts\">\n                {/* {genres.map((genre, index) => <li key={index}>{genre.table.name}</li>)} */}\n                {genres}\n              </ul>\n\n              <h2>Casts: </h2>\n              <ul className=\"casts\">\n                {casts? casts.map((cast, index) => <li key={index}>\n                  <span><a href={'/actors'}>{cast}</a></span>       \n                </li>) : ''}\n              </ul>\n            </div>\n          </div>  \n\n          <div className=\"detail-info\">\n            <h1 className=\"title\">Title : {title}</h1>\n            \n            <span>\n            <h2> OverView : {overview}</h2>\n            </span>  \n\n            <span>\n            <h2> Release date : {release_date}</h2>\n            <h2> Runtime : {runtime} minutes</h2>\n            <h2> Vote Average : {vote_average} </h2>\n            <h2> Revenue : ${revenue.toLocaleString('en')} </h2>\n            {/* Genre: <span className=\"font-weight-bold\">{genres}</span>{' '} */}\n            {/* <ReactPlayer url=\"https://www.youtube.com/watch?v=k71hjl3zWsA\" controls={true}/> */}\n            <ReactPlayer url={this.state.video_url} controls={true}/>\n\n            </span>  \n\n          </div>\n      </div>\n      \n      <div className=\"detail\">\n        <div className='container'>\n \n\n            <div className=\"journals\">\n             \n              <h2>{journals && journals.length>0 ? ' Journals':''}</h2>\n              {journals && journals.map(journal => <Journal key={journal.id} {...journal} />) }\n              { <JournalForm listingId={id}  currentMovie = {this.state.listing.movie.table} handleUpdateListing={this.handleUpdateListing} fetchMovie = {this.fetchMovie}/> }\n            </div>\n\n            <div className=\"reviews\">\n                {/* <h4>\n                  <span className=\"rating\">★</span>\n                  &nbsp;\n                  <span>{rating} ({reviews.length} reviews)</span>\n                  <span>{5} ({5} reviews)</span>\n                </h4> */}\n                <h2>{reviews && reviews.table.results.length>0 ? 'Reviews':''}</h2>\n                {reviews? reviews.table.results.map(review => <Review key={review.id} {...review} />):''} \n                {/* { <ReviewForm listingId={id} currentMovie = {this.state.listing.movie.table} handleUpdateListing={this.handleUpdateListing} fetchMovie = {this.fetchMovie}/> } */}\n            </div>\n\n       \n\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ListingPage","import React from 'react'\nimport { API_URL } from '../constants'\n\nclass LoginForm extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  }\n\n  handleInputChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    // create a user\n    fetch(API_URL + \"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include',\n      body: JSON.stringify(this.state)\n    })\n      .then(r => {\n        if (!r.ok) {\n          throw r\n        }\n        return r.json()\n      })\n      .then(user => {\n        // this is our redirect\n        this.props.history.push(\"/listings\")\n        this.props.handleUpdateCurrentUser(user)\n      })\n      .catch(console.error)\n\n  }\n\n  render() {\n    const { username, password } = this.state\n    return (\n      <div className=\"form-container\">\n        <h3>Login to your account</h3>\n        <form onSubmit={this.handleSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" onChange={this.handleInputChange} value={username} />\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" onChange={this.handleInputChange} value={password} />\n          <input type=\"submit\" value=\"Login\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LoginForm","import React from 'react'\nimport { API_URL } from '../constants'\n\nclass SignUpForm extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    password_confirmation: \"\"\n  }\n\n  handleInputChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    if (this.state.password === this.state.password_confirmation) {\n\n      // create a user\n      fetch(API_URL + \"/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify(this.state)\n      })\n        .then(r => {\n          if (!r.ok) {\n            throw r\n          }\n          return r.json()\n        })\n        .then(user => {\n          this.props.history.push(\"/listings\")\n          this.props.handleUpdateCurrentUser(user)\n        })\n        .catch(console.error)\n\n    } else {\n      alert(\"passwords don't match\")\n    }\n\n  }\n\n  render() {\n    const { username, password, password_confirmation } = this.state\n    return (\n      <div className=\"form-container\">\n        <h3>Sign up for an account</h3>\n        <form onSubmit={this.handleSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" onChange={this.handleInputChange} value={username} />\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" onChange={this.handleInputChange} value={password} />\n          <label>Confirm Password:</label>\n          <input type=\"password\" name=\"password_confirmation\" onChange={this.handleInputChange} value={password_confirmation} />\n          <input type=\"submit\" value=\"Sign Up\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default SignUpForm","import React from 'react'\nimport { IMAGE_URL } from '../constants'\nimport Journal from './Journal'\nconst JournalItem = (props) => {\n\n  const sliceTitle = (string) =>\n  {\n    return (string.length <19 ? string : `${string.slice(0,18)}...`)\n  }\n\n  // destructuring the props object (we could also do the destructuring directly to the argument of the ListingCard fn)\n  // const { image, name, city, rating, price } = this.props\n  // const { id, poster_path, title, journals } = props.movie\n  const { poster_path, title, journals } = props.movie\n  // poster_path = \"https://image.tmdb.org/t/p/w300\"+poster_path;\n  let image = IMAGE_URL + poster_path;\n\n  return (    \n      <div className=\"card-journal\" onClick={() => {}}>\n        <div className=\"image\" style={{ backgroundImage: `url(${image})` }}>\n        </div>\n        <div  className=\"info\">\n        <h4 className=\"title\">{sliceTitle(title)}</h4>\n        </div>\n        <div className=\"journal-info\">\n        {journals && journals.map(journal => <Journal key={journal.id} {...journal} />) }\n        </div>\n      </div>  \n  )\n}\n\nexport default JournalItem","import React, {useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n// import { API_URL, IMAGE_URL } from '../constants'\nimport { API_URL} from '../constants'\nimport JournalItem from './JournalItem'\nconst JournalList = () => {\n\n  const movies = useSelector(state => state.movies)\n\n  // const { comments, comment } = useSelector(state => {\n  //   return {\n  //     comments: state.comments,\n  //     comment: state.comment\n  //   }\n  // })\n\n  console.log(movies)\n\n  const fetchListings = ()=>{\n\n    let url = API_URL + `/movies`;\n\n    console.log(url)\n    fetch(url, {\n      credentials: \"include\"\n    })\n      .then(r => r.json())\n      .then(data => dispatch({ type: \"SET_MOVIES\", payload: data }))\n  }\n\n  // const [counter, setCounter] = userState(0)\n  const dispatch = useDispatch()\n\n  useEffect(()=>{\n    // document.title = `Counter is' ${counter}`;\n    // console.log('useEffect')\n    fetchListings()\n  })\n\n\n\n  return (\n    <div>\n      {/* JournalList */}\n      <section className=\"listings\">\n      {/* {movies? movies.map(movie=><div>{movie.title}</div>) : '' } */}\n\n      {movies? movies.map(movie=><JournalItem key={movie.id} movie={movie} />) : '' }\n\n      {/* My counter is {counter}; */}\n      {/* <button onClick={increaseCounter}></button> */}\n      </section>\n    </div>\n  )\n}\n\nexport default JournalList\n\n// return listings.map(listing => <ListingCard key={listing.table.id} listing={listing} showDetail={this.showDetail} handleUpdateListing={this.handleUpdateListing}/>)","import React from 'react'\n\nconst ActorDetail = ({ username, watch_date, text }) => {\n  console.log('ActorDetail')\n  return (\n    <div>\n      <div className=\"journal\">\n        ActorDetails        \n        <section>\n        <h5>{watch_date}</h5>\n        {/* <span className=\"date\" class=\"active\">{watch_date}</span> */}\n        <p className=\"comment\">{text}</p>\n        <p>{\"\\n\"}</p>\n        </section>\n      </div>\n      <div style={{ flexGrow: 0, flexBasis: '33.333%', }} >\n        {/* <button> Delete</button> */}\n      </div>\n    </div>\n  )\n}\n\nexport default ActorDetail","import React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport NavBar from './NavBar'\nimport ListingsContainer from './ListingsContainer';\nimport ListingPage from './ListingPage';\nimport LoginForm from './LoginForm';\nimport SignupForm from './SignupForm';\nimport JournalList from './JournalList';\nimport ActorDetail from './ActorDetail';\nimport { API_URL } from '../constants'\nimport { connect } from 'react-redux'\n// import { createStore, applyMiddleware, compose } from 'redux'\nimport { compose } from 'redux'\n// import thunk from 'redux-thunk'\n//import logo from './logo.svg';\n//import './App.css';\n/*\nimport { useHistory } from \"react-router-dom\";\nconst history = useHistory()\nhistory.push(\"/login\")\n*/\n\nclass App extends React.Component {\n  state = {\n    currentUser: null,\n    searchTerm: \"\",\n    indexTerm:\"\"\n  }\n\n  componentDidMount() {\n    document.title = 'Movie Playground'\n    fetch(API_URL + \"/autologin\", {\n      mode: 'no-cors',\n      credentials: \"include\"\n    })\n      .then(r => {\n        console.log(r)\n        if (!r.ok) {\n          throw r\n        }\n        return r.json()\n      })\n      .then(user => this.setState({ currentUser: user }))\n      .catch(console.error)\n  }\n\n  handleUpdateCurrentUser = user => {\n    console.log(user)\n    this.setState({\n      currentUser: user\n    })\n  }\n\n  handleUpdateSearch = searchTerm => {\n    // this.props.history.push(`/listings/search/${encodeURIComponent(searchTerm)}`)\n    this.setState({searchTerm: searchTerm})\n  }\n\n  handleIndexSelectChange = indexTerm =>{\n    this.setState({indexTerm: indexTerm})\n  } \n\n  render() {\n    console.log(\"In app\", this.state)\n\n    return( \n    <>\n      Movie app\n      <NavBar\n        handleUpdateCurrentUser={this.handleUpdateCurrentUser}\n        handleUpdateSearch={this.handleUpdateSearch}\n        handleIndexSelectChange={this.handleIndexSelectChange}\n        currentUser={this.state.currentUser}\n      />\n      <main>\n        <Switch>\n          <Route exact path=\"/\" render={() => <h1>Home</h1>} />\n          <Route path=\"/login\" render={routeProps => <LoginForm {...routeProps} handleUpdateCurrentUser={this.handleUpdateCurrentUser} />} />\n          <Route path=\"/signup\" render={routeProps => <SignupForm {...routeProps} handleUpdateCurrentUser={this.handleUpdateCurrentUser} />} />\n          {this.state.currentUser && (\n            <>\n              <Route path=\"/listings/:id\" render={routeProps => <ListingPage {...routeProps} />} />\n              <Route path=\"/journals\" render={routeProps => <JournalList {...routeProps} />} />\n              <Route path=\"/actors/:id\" render={routeProps => <ActorDetail  {...routeProps} />} />\n              <Route exact path=\"/listings\" render={routeProps => <ListingsContainer {...routeProps} searchTerm={this.state.searchTerm} indexTerm={this.state.indexTerm}/>} />\n            </>\n          )}\n        </Switch>\n      </main>\n    </>\n    )\n  }\n}\n\n\n// mapStateToProps = returns whatever props we want added to our component\nconst mapStateToProps = state => {\n  console.log(\"mSP\", state)\n  return {\n    counter: state.counter,\n    paused: state.paused,\n    likedNumbers: state.likedNumbers,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    someFunc: () => dispatch({ type: \"WHATEVER\" }),\n    // updateComment: (text) => dispatch({ type: \"UPDATE_COMMENT\", payload: text }),\n    // togglePause: () => dispatch({ type: \"TOGGLE_PAUSE\" }),\n    // increment: () => dispatch({ type: \"INCREMENT\" }),\n    // decrement: () => dispatch({ type: \"DECREMENT\" }),\n    // addComment: () => dispatch({ type: \"ADD_COMMENT\" }),\n    // likeNumber: () => dispatch({ type: \"LIKE_NUMBER\" }),\n  }\n}\n\n// export default withRouter(App);\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(App);\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n","const defaultState = {\n  counter: 100,\n  paused: true,\n  likedNumbers: {},\n  comment: \"pls work?\",\n  comments: [\"some comment\"],\n  somethingElse: \"yeah\",\n  movies: null\n}\n\n// PURE FUNCTION - has no side effects \n// (without a return value, it's kinda useless)\n// don't modify the data that is passed in\n// it can't rely on external data\n// needs to return the same output given the same input\n\n// Reducer takes the current state from the store and an action that we dispatch\n// and returns a new object with the next version of state\n// We need to provide a 'default state' so the first time our reducer is called \n// it can set up the initial state\n// The action must be a POJO that has a key of type { type: \"ACTION_TYPE\", payload: data }\nexport const reducer = (state = defaultState, action) => {\n  console.log(action)\n  switch (action.type) {\n    // case \"INCREMENT\":\n    //   return {\n    //     ...state,\n    //     counter: state.counter + 1\n    //   }\n    // case \"DECREMENT\":\n    //   return {\n    //     ...state,\n    //     counter: state.counter - 1\n    //   }\n    // case \"LIKE_NUMBER\":\n    //   const count = state.likedNumbers[state.counter] ? state.likedNumbers[state.counter] + 1 : 1\n\n    //   return {\n    //     ...state,\n    //     likedNumbers: {\n    //       ...state.likedNumbers,\n    //       [state.counter]: count\n    //     }\n    //   }\n    // case \"TOGGLE_PAUSE\":\n    //   return {\n    //     ...state,\n    //     paused: !state.paused\n    //   }\n    // case \"ADD_COMMENT\":\n    //   return {\n    //     ...state,\n    //     comments: [...state.comments, state.comment],\n    //     comment: \"\"\n    //   }\n    // case \"UPDATE_COMMENT\":\n    //   return {\n    //     ...state,\n    //     comment: action.payload\n    //   }\n    \n    case \"SET_MOVIES\":\n      return {\n        ...state,\n        movies: action.payload\n      }\n      \n    case \"FETCH_MOVIES\":\n      return {\n        ...state,\n        movies: action.payload\n      }  \n\n    default:\n      return state\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware} from 'redux'\nimport { Provider } from 'react-redux'\nimport { reducer } from './store/reducer'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk'\n\n// const store = createStore(reducer)\nconst store = createStore(reducer, composeWithDevTools(\n  applyMiddleware(thunk),\n  // other store enhancers if any\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}